<?php
namespace PurpleCommerce\CustomAdminEmail\Observer;

use Magento\Framework\Event\Observer as EventObserver;
use Magento\Framework\Event\ObserverInterface;
use Magento\Framework\Mail\Template\TransportBuilder;
use Magento\Framework\App\Config\ScopeConfigInterface;
use Magento\Store\Model\ScopeInterface;
use Magento\Customer\Api\GroupRepositoryInterface;
use Magento\Sales\Api\Data\ShipmentInterface;
use Magento\Sales\Api\Data\ShipmentTrackInterface;
use Magento\Sales\Api\ShipmentRepositoryInterface;
class NewOrder implements ObserverInterface
{
    /**
     * @var ShipmentRepositoryInterface
     */
    private $shipmentRepository;

    protected $_storeManager;
    protected $_storeInfo;
    protected $_logger;
    public function __construct(
        TransportBuilder $transportBuilder,
        ScopeConfigInterface $scopeConfig,
        \Magento\Store\Model\StoreManagerInterface $storeManager,   
        \Magento\Framework\Message\ManagerInterface $messageManager,
        \Magento\Store\Model\Information $storeInfo,   
        ShipmentRepositoryInterface $shipmentRepository,
        \Psr\Log\LoggerInterface $logger,  
        GroupRepositoryInterface $groupRepository
    ){
        $this->transportBuilder = $transportBuilder;
        $this->scopeConfig = $scopeConfig;
        $this->_logger = $logger;
        $this->shipmentRepository = $shipmentRepository;
        $this->_storeManager = $storeManager;
        $this->messageManager = $messageManager;
        $this->_storeInfo = $storeInfo;
        $this->groupRepository = $groupRepository;
    }
    /**
     * Get Shipment Trackig data by Shipment Id
     *
     * @param $id
     *
     * @return ShipmentTrackInterface|null
     */
    /**
     *
     * @param \Magento\Framework\Event\Observer $observer
     * @return $this
     */
    public function execute(\Magento\Framework\Event\Observer $observer)
    {
        
        $order = $observer->getEvent()->getOrder();
        

        $firstname = $order->getCustomerFirstname();
        $CusEmail = $order->getCustomerEmail();
        $lastname = $order->getCustomerLastname();
        $increment_id =$order->getIncrementId();
        $createdat=$order->getCreatedAt();
        // echo 'ii - '.$order->getIncrementId();
        // die;
        $objectManager = \Magento\Framework\App\ObjectManager::getInstance();
        $scopeConfig = $objectManager->create('\Magento\Framework\App\Config\ScopeConfigInterface');
        $email = $scopeConfig->getValue('trans_email/ident_support/email',\Magento\Store\Model\ScopeInterface::SCOPE_STORE);
        $adminEmail = 'natalie@jacarandaliving.com';
        $shippingtitle=$order->getShippingDescription();
        // die;
        $storeName = $this->_storeManager->getStore()->getName();
        $phone = $this->_storeManager->getStore()->getPhone();
        $storeUrl = $this->_storeManager->getStore()->getBaseUrl();
        if($shippingtitle=='Expedited Shipping'){
            $groupVariables = [
                'first_name' => 'nit',
                'store_name' => $storeName,
                'accountUrl' => $storeUrl.'customer/account',
                'phone' => $phone,
                'increment_id'=> $increment_id,
                'storeurl' => $storeUrl,
                'email' => $email,
                'created_at'=>$createdat,
                'customerEmail' => $CusEmail,
                'forgeturl' => $storeUrl.'customer/account/createPassword/'
            ];
    
    
            $email = $this->scopeConfig->getValue('trans_email/ident_general/email',ScopeInterface::SCOPE_STORE);
            $name  = $this->scopeConfig->getValue('trans_email/ident_general/name',ScopeInterface::SCOPE_STORE);
            
            $postObject = new \Magento\Framework\DataObject();
            $postObject->setData($groupVariables);
            
            $transport = $this->transportBuilder
                ->setTemplateIdentifier('13')
                ->setTemplateOptions(['area' => \Magento\Framework\App\Area::AREA_FRONTEND, 'store' => \Magento\Store\Model\Store::DEFAULT_STORE_ID])
                ->setTemplateVars(['order' => $postObject])
                ->setFrom(['name' => $name,'email' => $email])
                ->addTo($adminEmail)
                ->addCc('info@jacarandaliving.com')
                ->getTransport();
            $message = '';
            $transport->sendMessage();
        }
            
        return $this;
    }
}